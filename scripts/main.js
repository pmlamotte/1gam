"use strict";

window.stage = new PIXI.Stage(0);

// create a renderer instance.
var renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight);

// add the renderer view element to the DOM
document.body.appendChild(renderer.view);

window.inputManager = new InputManager();
window.textureFactory = new TextureFactory();
window.physicsManager = new PhysicsManager();
window.camera = new Camera();

textureFactory.load(window.textureAssets, function () {

	window.root = new BaseEntity();
	root.addComponent(physicsManager);

	loadLevel("test", function (entities) {
		_.map(entities, function (entity) {
			return root.addComponent(entity);
		});
		root.addComponent(entityBuilder.build("player smiley", {
			base: {
				position: {
					x: getWidth() / 2,
					y: getHeight() / 2
				}
			}
		}));
	});

	requestAnimFrame(animate);

	function getTimeInSeconds() {
		return Date.now() / 1000;
	}

	var lastTime = getTimeInSeconds();
	var lastDelta = 1;
	function animate() {

		requestAnimFrame(animate);

		var now = getTimeInSeconds();
		var timeElapsed = now - lastTime;
		root.updateComponents(timeElapsed, now);
		camera.update(timeElapsed, now);
		lastTime = now;
		lastDelta = timeElapsed;

		// render the stage 
		renderer.render(stage);
	}

	function getWidth() {
		return window.innerWidth;
	}

	function getHeight() {
		return window.innerHeight;
	}
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFRLENBQUMsQ0FBQzs7O0FBR3hDLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQzs7O0FBRzlFLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQzs7QUFFekMsTUFBTSxDQUFDLFlBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3pDLE1BQU0sQ0FBQyxjQUFjLEdBQUcsSUFBSSxjQUFjLEVBQUUsQ0FBQztBQUM3QyxNQUFNLENBQUMsY0FBYyxHQUFHLElBQUksY0FBYyxFQUFFLENBQUM7QUFDN0MsTUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDOztBQUU3QixjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsWUFBVzs7QUFFcEQsT0FBTSxDQUFDLElBQUksR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO0FBQy9CLEtBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUM7O0FBRWxDLFVBQVMsQ0FBQyxNQUFNLEVBQUUsVUFBUyxRQUFRLEVBQUU7QUFDcEMsR0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsVUFBQyxNQUFNO1VBQUssSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUM7R0FBQSxDQUFDLENBQUM7QUFDdkQsTUFBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLGVBQWUsRUFBRTtBQUN0RCxPQUFJLEVBQUU7QUFDTCxZQUFRLEVBQUU7QUFDVCxNQUFDLEVBQUUsUUFBUSxFQUFFLEdBQUcsQ0FBQztBQUNqQixNQUFDLEVBQUUsU0FBUyxFQUFFLEdBQUcsQ0FBQztLQUNsQjtJQUNEO0dBQ0QsQ0FBQyxDQUFDLENBQUM7RUFDSixDQUFDLENBQUM7O0FBRUgsaUJBQWdCLENBQUUsT0FBTyxDQUFFLENBQUM7O0FBRTVCLFVBQVMsZ0JBQWdCLEdBQUc7QUFDM0IsU0FBTyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO0VBQ3pCOztBQUVELEtBQUksUUFBUSxHQUFHLGdCQUFnQixFQUFFLENBQUM7QUFDbEMsS0FBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO0FBQ2xCLFVBQVMsT0FBTyxHQUFHOztBQUVmLGtCQUFnQixDQUFFLE9BQU8sQ0FBRSxDQUFDOztBQUU1QixNQUFJLEdBQUcsR0FBRyxnQkFBZ0IsRUFBRSxDQUFDO0FBQzdCLE1BQUksV0FBVyxHQUFHLEdBQUcsR0FBRyxRQUFRLENBQUM7QUFDakMsTUFBSSxDQUFDLGdCQUFnQixDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUN4QyxRQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsRUFBRSxHQUFHLENBQUMsQ0FBQztBQUNoQyxVQUFRLEdBQUcsR0FBRyxDQUFDO0FBQ2YsV0FBUyxHQUFHLFdBQVcsQ0FBQzs7O0FBR3hCLFVBQVEsQ0FBQyxNQUFNLENBQUMsS0FBSyxDQUFDLENBQUM7RUFDMUI7O0FBRUQsVUFBUyxRQUFRLEdBQUc7QUFDbkIsU0FBTyxNQUFNLENBQUMsVUFBVSxDQUFDO0VBQ3pCOztBQUVELFVBQVMsU0FBUyxHQUFHO0FBQ3BCLFNBQU8sTUFBTSxDQUFDLFdBQVcsQ0FBQztFQUMxQjtDQUNELENBQUMsQ0FBQyIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsid2luZG93LnN0YWdlID0gbmV3IFBJWEkuU3RhZ2UoMHgwMDAwMDApO1xuXG4vLyBjcmVhdGUgYSByZW5kZXJlciBpbnN0YW5jZS5cbnZhciByZW5kZXJlciA9IFBJWEkuYXV0b0RldGVjdFJlbmRlcmVyKHdpbmRvdy5pbm5lcldpZHRoLCB3aW5kb3cuaW5uZXJIZWlnaHQpO1xuXG4vLyBhZGQgdGhlIHJlbmRlcmVyIHZpZXcgZWxlbWVudCB0byB0aGUgRE9NXG5kb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHJlbmRlcmVyLnZpZXcpO1xuXG53aW5kb3cuaW5wdXRNYW5hZ2VyID0gbmV3IElucHV0TWFuYWdlcigpO1xud2luZG93LnRleHR1cmVGYWN0b3J5ID0gbmV3IFRleHR1cmVGYWN0b3J5KCk7XG53aW5kb3cucGh5c2ljc01hbmFnZXIgPSBuZXcgUGh5c2ljc01hbmFnZXIoKTtcbndpbmRvdy5jYW1lcmEgPSBuZXcgQ2FtZXJhKCk7XG5cbnRleHR1cmVGYWN0b3J5LmxvYWQod2luZG93LnRleHR1cmVBc3NldHMsIGZ1bmN0aW9uKCkge1xuXG5cdHdpbmRvdy5yb290ID0gbmV3IEJhc2VFbnRpdHkoKTtcblx0cm9vdC5hZGRDb21wb25lbnQocGh5c2ljc01hbmFnZXIpO1xuXG5cdGxvYWRMZXZlbCgndGVzdCcsIGZ1bmN0aW9uKGVudGl0aWVzKSB7XG5cdFx0Xy5tYXAoZW50aXRpZXMsIChlbnRpdHkpID0+IHJvb3QuYWRkQ29tcG9uZW50KGVudGl0eSkpO1xuXHRcdHJvb3QuYWRkQ29tcG9uZW50KGVudGl0eUJ1aWxkZXIuYnVpbGQoJ3BsYXllciBzbWlsZXknLCB7XG5cdFx0XHRiYXNlOiB7XG5cdFx0XHRcdHBvc2l0aW9uOiB7XG5cdFx0XHRcdFx0eDogZ2V0V2lkdGgoKSAvIDIsXG5cdFx0XHRcdFx0eTogZ2V0SGVpZ2h0KCkgLyAyXG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9KSk7XG5cdH0pO1xuXG5cdHJlcXVlc3RBbmltRnJhbWUoIGFuaW1hdGUgKTtcblxuXHRmdW5jdGlvbiBnZXRUaW1lSW5TZWNvbmRzKCkge1xuXHRcdHJldHVybiBEYXRlLm5vdygpIC8gMTAwMDtcblx0fVxuXG5cdHZhciBsYXN0VGltZSA9IGdldFRpbWVJblNlY29uZHMoKTtcblx0dmFyIGxhc3REZWx0YSA9IDE7XG5cdGZ1bmN0aW9uIGFuaW1hdGUoKSB7XG5cblx0ICAgIHJlcXVlc3RBbmltRnJhbWUoIGFuaW1hdGUgKTtcblxuXHQgICAgdmFyIG5vdyA9IGdldFRpbWVJblNlY29uZHMoKTtcblx0ICAgIHZhciB0aW1lRWxhcHNlZCA9IG5vdyAtIGxhc3RUaW1lO1xuXHQgICAgcm9vdC51cGRhdGVDb21wb25lbnRzKHRpbWVFbGFwc2VkLCBub3cpO1xuXHQgICAgY2FtZXJhLnVwZGF0ZSh0aW1lRWxhcHNlZCwgbm93KTtcblx0ICAgIGxhc3RUaW1lID0gbm93O1xuXHQgICAgbGFzdERlbHRhID0gdGltZUVsYXBzZWQ7XG5cblx0ICAgIC8vIHJlbmRlciB0aGUgc3RhZ2UgIFxuXHQgICAgcmVuZGVyZXIucmVuZGVyKHN0YWdlKTtcblx0fVxuXG5cdGZ1bmN0aW9uIGdldFdpZHRoKCkge1xuXHRcdHJldHVybiB3aW5kb3cuaW5uZXJXaWR0aDtcblx0fVxuXG5cdGZ1bmN0aW9uIGdldEhlaWdodCgpIHtcblx0XHRyZXR1cm4gd2luZG93LmlubmVySGVpZ2h0O1xuXHR9XG59KTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=