"use strict";

window.stage = new PIXI.Stage(0);

// create a renderer instance.
var renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight);

// add the renderer view element to the DOM
document.body.appendChild(renderer.view);

window.inputManager = new InputManager();
window.textureFactory = new TextureFactory();
window.physicsManager = new PhysicsManager();
window.camera = new Camera();

textureFactory.load(window.textureAssets, function () {

	window.root = new BaseEntity();
	root.addComponent(physicsManager);

	loadLevel("test", function (entities) {
		_.map(entities, function (entity) {
			return root.addComponent(entity);
		});
		var player = entityBuilder.build("player smiley", {
			base: {
				position: {
					x: getWidth() / 2,
					y: getHeight() / 2
				}
			}
		});

		player.addComponent(new CameraComponent());

		root.addComponent(player);
	});

	requestAnimFrame(animate);

	function getTimeInSeconds() {
		return Date.now() / 1000;
	}

	var lastTime = getTimeInSeconds();
	var lastDelta = 1;
	function animate() {

		requestAnimFrame(animate);

		var now = getTimeInSeconds();
		var timeElapsed = now - lastTime;
		root.updateComponents(timeElapsed, now);
		camera.update(timeElapsed, now);
		lastTime = now;
		lastDelta = timeElapsed;

		// render the stage 
		renderer.render(stage);
	}

	function getWidth() {
		return window.innerWidth;
	}

	function getHeight() {
		return window.innerHeight;
	}
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxNQUFNLENBQUMsS0FBSyxHQUFHLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFRLENBQUMsQ0FBQzs7O0FBR3hDLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQzs7O0FBRzlFLFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQzs7QUFFekMsTUFBTSxDQUFDLFlBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO0FBQ3pDLE1BQU0sQ0FBQyxjQUFjLEdBQUcsSUFBSSxjQUFjLEVBQUUsQ0FBQztBQUM3QyxNQUFNLENBQUMsY0FBYyxHQUFHLElBQUksY0FBYyxFQUFFLENBQUM7QUFDN0MsTUFBTSxDQUFDLE1BQU0sR0FBRyxJQUFJLE1BQU0sRUFBRSxDQUFDOztBQUU3QixjQUFjLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsWUFBVzs7QUFFcEQsT0FBTSxDQUFDLElBQUksR0FBRyxJQUFJLFVBQVUsRUFBRSxDQUFDO0FBQy9CLEtBQUksQ0FBQyxZQUFZLENBQUMsY0FBYyxDQUFDLENBQUM7O0FBRWxDLFVBQVMsQ0FBQyxNQUFNLEVBQUUsVUFBUyxRQUFRLEVBQUU7QUFDcEMsR0FBQyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsVUFBQyxNQUFNO1VBQUssSUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUM7R0FBQSxDQUFDLENBQUM7QUFDdkQsTUFBSSxNQUFNLEdBQUcsYUFBYSxDQUFDLEtBQUssQ0FBQyxlQUFlLEVBQUU7QUFDakQsT0FBSSxFQUFFO0FBQ0wsWUFBUSxFQUFFO0FBQ1QsTUFBQyxFQUFFLFFBQVEsRUFBRSxHQUFHLENBQUM7QUFDakIsTUFBQyxFQUFFLFNBQVMsRUFBRSxHQUFHLENBQUM7S0FDbEI7SUFDRDtHQUNELENBQUMsQ0FBQzs7QUFFSCxRQUFNLENBQUMsWUFBWSxDQUFDLElBQUksZUFBZSxFQUFFLENBQUMsQ0FBQzs7QUFFM0MsTUFBSSxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQztFQUMxQixDQUFDLENBQUM7O0FBRUgsaUJBQWdCLENBQUUsT0FBTyxDQUFFLENBQUM7O0FBRTVCLFVBQVMsZ0JBQWdCLEdBQUc7QUFDM0IsU0FBTyxJQUFJLENBQUMsR0FBRyxFQUFFLEdBQUcsSUFBSSxDQUFDO0VBQ3pCOztBQUVELEtBQUksUUFBUSxHQUFHLGdCQUFnQixFQUFFLENBQUM7QUFDbEMsS0FBSSxTQUFTLEdBQUcsQ0FBQyxDQUFDO0FBQ2xCLFVBQVMsT0FBTyxHQUFHOztBQUVsQixrQkFBZ0IsQ0FBRSxPQUFPLENBQUUsQ0FBQzs7QUFFNUIsTUFBSSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztBQUM3QixNQUFJLFdBQVcsR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDO0FBQ2pDLE1BQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDeEMsUUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDaEMsVUFBUSxHQUFHLEdBQUcsQ0FBQztBQUNmLFdBQVMsR0FBRyxXQUFXLENBQUM7OztBQUd4QixVQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0VBQ3ZCOztBQUVELFVBQVMsUUFBUSxHQUFHO0FBQ25CLFNBQU8sTUFBTSxDQUFDLFVBQVUsQ0FBQztFQUN6Qjs7QUFFRCxVQUFTLFNBQVMsR0FBRztBQUNwQixTQUFPLE1BQU0sQ0FBQyxXQUFXLENBQUM7RUFDMUI7Q0FDRCxDQUFDLENBQUMiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIndpbmRvdy5zdGFnZSA9IG5ldyBQSVhJLlN0YWdlKDB4MDAwMDAwKTtcblxuLy8gY3JlYXRlIGEgcmVuZGVyZXIgaW5zdGFuY2UuXG52YXIgcmVuZGVyZXIgPSBQSVhJLmF1dG9EZXRlY3RSZW5kZXJlcih3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KTtcblxuLy8gYWRkIHRoZSByZW5kZXJlciB2aWV3IGVsZW1lbnQgdG8gdGhlIERPTVxuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChyZW5kZXJlci52aWV3KTtcblxud2luZG93LmlucHV0TWFuYWdlciA9IG5ldyBJbnB1dE1hbmFnZXIoKTtcbndpbmRvdy50ZXh0dXJlRmFjdG9yeSA9IG5ldyBUZXh0dXJlRmFjdG9yeSgpO1xud2luZG93LnBoeXNpY3NNYW5hZ2VyID0gbmV3IFBoeXNpY3NNYW5hZ2VyKCk7XG53aW5kb3cuY2FtZXJhID0gbmV3IENhbWVyYSgpO1xuXG50ZXh0dXJlRmFjdG9yeS5sb2FkKHdpbmRvdy50ZXh0dXJlQXNzZXRzLCBmdW5jdGlvbigpIHtcblxuXHR3aW5kb3cucm9vdCA9IG5ldyBCYXNlRW50aXR5KCk7XG5cdHJvb3QuYWRkQ29tcG9uZW50KHBoeXNpY3NNYW5hZ2VyKTtcblxuXHRsb2FkTGV2ZWwoJ3Rlc3QnLCBmdW5jdGlvbihlbnRpdGllcykge1xuXHRcdF8ubWFwKGVudGl0aWVzLCAoZW50aXR5KSA9PiByb290LmFkZENvbXBvbmVudChlbnRpdHkpKTtcblx0XHR2YXIgcGxheWVyID0gZW50aXR5QnVpbGRlci5idWlsZCgncGxheWVyIHNtaWxleScsIHtcblx0XHRcdGJhc2U6IHtcblx0XHRcdFx0cG9zaXRpb246IHtcblx0XHRcdFx0XHR4OiBnZXRXaWR0aCgpIC8gMixcblx0XHRcdFx0XHR5OiBnZXRIZWlnaHQoKSAvIDJcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXG5cdFx0cGxheWVyLmFkZENvbXBvbmVudChuZXcgQ2FtZXJhQ29tcG9uZW50KCkpO1xuXG5cdFx0cm9vdC5hZGRDb21wb25lbnQocGxheWVyKTtcblx0fSk7XG5cblx0cmVxdWVzdEFuaW1GcmFtZSggYW5pbWF0ZSApO1xuXG5cdGZ1bmN0aW9uIGdldFRpbWVJblNlY29uZHMoKSB7XG5cdFx0cmV0dXJuIERhdGUubm93KCkgLyAxMDAwO1xuXHR9XG5cblx0dmFyIGxhc3RUaW1lID0gZ2V0VGltZUluU2Vjb25kcygpO1xuXHR2YXIgbGFzdERlbHRhID0gMTtcblx0ZnVuY3Rpb24gYW5pbWF0ZSgpIHtcblxuXHRcdHJlcXVlc3RBbmltRnJhbWUoIGFuaW1hdGUgKTtcblxuXHRcdHZhciBub3cgPSBnZXRUaW1lSW5TZWNvbmRzKCk7XG5cdFx0dmFyIHRpbWVFbGFwc2VkID0gbm93IC0gbGFzdFRpbWU7XG5cdFx0cm9vdC51cGRhdGVDb21wb25lbnRzKHRpbWVFbGFwc2VkLCBub3cpO1xuXHRcdGNhbWVyYS51cGRhdGUodGltZUVsYXBzZWQsIG5vdyk7XG5cdFx0bGFzdFRpbWUgPSBub3c7XG5cdFx0bGFzdERlbHRhID0gdGltZUVsYXBzZWQ7XG5cblx0XHQvLyByZW5kZXIgdGhlIHN0YWdlICBcblx0XHRyZW5kZXJlci5yZW5kZXIoc3RhZ2UpO1xuXHR9XG5cblx0ZnVuY3Rpb24gZ2V0V2lkdGgoKSB7XG5cdFx0cmV0dXJuIHdpbmRvdy5pbm5lcldpZHRoO1xuXHR9XG5cblx0ZnVuY3Rpb24gZ2V0SGVpZ2h0KCkge1xuXHRcdHJldHVybiB3aW5kb3cuaW5uZXJIZWlnaHQ7XG5cdH1cbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==