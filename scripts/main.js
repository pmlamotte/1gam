"use strict";

var stage = new PIXI.Stage(0);

// create a renderer instance.
var renderer = PIXI.autoDetectRenderer(window.innerWidth, window.innerHeight);

// add the renderer view element to the DOM
document.body.appendChild(renderer.view);

window.inputManager = new InputManager();
window.textureFactory = new TextureFactory();
window.physicsManager = new PhysicsManager();
textureFactory.load(function () {
	window.root = new BaseEntity();
	root.addComponent(physicsManager);
	root.addComponent(entityBuilder.build("attractor"));
	//root.addComponent(entityBuilder.build('debugSmiley'));
	//root.addComponent(entityBuilder.build('player smiley', {position: {x: 500, y: 500}}));
	addSmileys(7);

	requestAnimFrame(animate);

	function getTimeInSeconds() {
		return Date.now() / 1000;
	}

	var lastTime = getTimeInSeconds();
	var lastDelta = 1;
	function animate() {
		requestAnimFrame(animate);

		var now = getTimeInSeconds();
		var timeElapsed = now - lastTime;
		root.updateComponents(timeElapsed, now);
		lastTime = now;
		lastDelta = timeElapsed;

		// render the stage 
		renderer.render(stage);
	}

	function getWidth() {
		return window.innerWidth;
	}

	function getHeight() {
		return window.innerHeight;
	}

	function addSmileys(count) {
		for (var i = 0; i < count; i++) {
			var options = {
				position: { x: getWidth() * (i / count), y: 1 }
			};
			root.addComponent(entityBuilder.build("smiley", options));
		}
	}
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFJLEtBQUssR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBUSxDQUFDLENBQUM7OztBQUdyQyxJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxNQUFNLENBQUMsV0FBVyxDQUFDLENBQUM7OztBQUc5RSxRQUFRLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUM7O0FBRXpDLE1BQU0sQ0FBQyxZQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztBQUN6QyxNQUFNLENBQUMsY0FBYyxHQUFHLElBQUksY0FBYyxFQUFFLENBQUM7QUFDN0MsTUFBTSxDQUFDLGNBQWMsR0FBRyxJQUFJLGNBQWMsRUFBRSxDQUFDO0FBQzdDLGNBQWMsQ0FBQyxJQUFJLENBQUMsWUFBVztBQUU5QixPQUFNLENBQUMsSUFBSSxHQUFHLElBQUksVUFBVSxFQUFFLENBQUM7QUFDL0IsS0FBSSxDQUFDLFlBQVksQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUNsQyxLQUFJLENBQUMsWUFBWSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQzs7O0FBR3BELFdBQVUsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7QUFFZCxpQkFBZ0IsQ0FBRSxPQUFPLENBQUUsQ0FBQzs7QUFFNUIsVUFBUyxnQkFBZ0IsR0FBRztBQUMzQixTQUFPLElBQUksQ0FBQyxHQUFHLEVBQUUsR0FBRyxJQUFJLENBQUM7RUFDekI7O0FBRUQsS0FBSSxRQUFRLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztBQUNsQyxLQUFJLFNBQVMsR0FBRyxDQUFDLENBQUM7QUFDbEIsVUFBUyxPQUFPLEdBQUc7QUFFZixrQkFBZ0IsQ0FBRSxPQUFPLENBQUUsQ0FBQzs7QUFFNUIsTUFBSSxHQUFHLEdBQUcsZ0JBQWdCLEVBQUUsQ0FBQztBQUM3QixNQUFJLFdBQVcsR0FBRyxHQUFHLEdBQUcsUUFBUSxDQUFDO0FBQ2pDLE1BQUksQ0FBQyxnQkFBZ0IsQ0FBQyxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUM7QUFDeEMsVUFBUSxHQUFHLEdBQUcsQ0FBQztBQUNmLFdBQVMsR0FBRyxXQUFXLENBQUM7OztBQUd4QixVQUFRLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDO0VBQzFCOztBQUVELFVBQVMsUUFBUSxHQUFHO0FBQ25CLFNBQU8sTUFBTSxDQUFDLFVBQVUsQ0FBQztFQUN6Qjs7QUFFRCxVQUFTLFNBQVMsR0FBRztBQUNwQixTQUFPLE1BQU0sQ0FBQyxXQUFXLENBQUM7RUFDMUI7O0FBRUQsVUFBUyxVQUFVLENBQUMsS0FBSyxFQUFFO0FBQzFCLE9BQUssSUFBSSxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsR0FBRyxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUU7QUFDL0IsT0FBSSxPQUFPLEdBQUc7QUFDYixZQUFRLEVBQUUsRUFBQyxDQUFDLEVBQUUsUUFBUSxFQUFFLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQSxBQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBQztJQUM3QyxDQUFDO0FBQ0YsT0FBSSxDQUFDLFlBQVksQ0FBQyxhQUFhLENBQUMsS0FBSyxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQyxDQUFDO0dBQzFEO0VBQ0Q7Q0FDRCxDQUFDLENBQUMiLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBzdGFnZSA9IG5ldyBQSVhJLlN0YWdlKDB4MDAwMDAwKTtcblxuLy8gY3JlYXRlIGEgcmVuZGVyZXIgaW5zdGFuY2UuXG52YXIgcmVuZGVyZXIgPSBQSVhJLmF1dG9EZXRlY3RSZW5kZXJlcih3aW5kb3cuaW5uZXJXaWR0aCwgd2luZG93LmlubmVySGVpZ2h0KTtcblxuLy8gYWRkIHRoZSByZW5kZXJlciB2aWV3IGVsZW1lbnQgdG8gdGhlIERPTVxuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChyZW5kZXJlci52aWV3KTtcblxud2luZG93LmlucHV0TWFuYWdlciA9IG5ldyBJbnB1dE1hbmFnZXIoKTtcbndpbmRvdy50ZXh0dXJlRmFjdG9yeSA9IG5ldyBUZXh0dXJlRmFjdG9yeSgpO1xud2luZG93LnBoeXNpY3NNYW5hZ2VyID0gbmV3IFBoeXNpY3NNYW5hZ2VyKCk7XG50ZXh0dXJlRmFjdG9yeS5sb2FkKGZ1bmN0aW9uKCkge1xuXG5cdHdpbmRvdy5yb290ID0gbmV3IEJhc2VFbnRpdHkoKTtcblx0cm9vdC5hZGRDb21wb25lbnQocGh5c2ljc01hbmFnZXIpO1xuXHRyb290LmFkZENvbXBvbmVudChlbnRpdHlCdWlsZGVyLmJ1aWxkKCdhdHRyYWN0b3InKSk7XG5cdC8vcm9vdC5hZGRDb21wb25lbnQoZW50aXR5QnVpbGRlci5idWlsZCgnZGVidWdTbWlsZXknKSk7XG5cdC8vcm9vdC5hZGRDb21wb25lbnQoZW50aXR5QnVpbGRlci5idWlsZCgncGxheWVyIHNtaWxleScsIHtwb3NpdGlvbjoge3g6IDUwMCwgeTogNTAwfX0pKTtcblx0YWRkU21pbGV5cyg3KTtcblxuXHRyZXF1ZXN0QW5pbUZyYW1lKCBhbmltYXRlICk7XG5cblx0ZnVuY3Rpb24gZ2V0VGltZUluU2Vjb25kcygpIHtcblx0XHRyZXR1cm4gRGF0ZS5ub3coKSAvIDEwMDA7XG5cdH1cblxuXHR2YXIgbGFzdFRpbWUgPSBnZXRUaW1lSW5TZWNvbmRzKCk7XG5cdHZhciBsYXN0RGVsdGEgPSAxO1xuXHRmdW5jdGlvbiBhbmltYXRlKCkge1xuXG5cdCAgICByZXF1ZXN0QW5pbUZyYW1lKCBhbmltYXRlICk7XG5cblx0ICAgIHZhciBub3cgPSBnZXRUaW1lSW5TZWNvbmRzKCk7XG5cdCAgICB2YXIgdGltZUVsYXBzZWQgPSBub3cgLSBsYXN0VGltZTtcblx0ICAgIHJvb3QudXBkYXRlQ29tcG9uZW50cyh0aW1lRWxhcHNlZCwgbm93KTtcblx0ICAgIGxhc3RUaW1lID0gbm93O1xuXHQgICAgbGFzdERlbHRhID0gdGltZUVsYXBzZWQ7XG5cblx0ICAgIC8vIHJlbmRlciB0aGUgc3RhZ2UgIFxuXHQgICAgcmVuZGVyZXIucmVuZGVyKHN0YWdlKTtcblx0fVxuXG5cdGZ1bmN0aW9uIGdldFdpZHRoKCkge1xuXHRcdHJldHVybiB3aW5kb3cuaW5uZXJXaWR0aDtcblx0fVxuXG5cdGZ1bmN0aW9uIGdldEhlaWdodCgpIHtcblx0XHRyZXR1cm4gd2luZG93LmlubmVySGVpZ2h0O1xuXHR9XG5cblx0ZnVuY3Rpb24gYWRkU21pbGV5cyhjb3VudCkge1xuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xuXHRcdFx0dmFyIG9wdGlvbnMgPSB7XG5cdFx0XHRcdHBvc2l0aW9uOiB7eDogZ2V0V2lkdGgoKSAqIChpIC8gY291bnQpLCB5OiAxfVxuXHRcdFx0fTtcblx0XHRcdHJvb3QuYWRkQ29tcG9uZW50KGVudGl0eUJ1aWxkZXIuYnVpbGQoJ3NtaWxleScsIG9wdGlvbnMpKTtcblx0XHR9XG5cdH1cbn0pOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==